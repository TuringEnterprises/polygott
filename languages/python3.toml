name = "python3"
entrypoint = "/opt/code-exec-env/main.py"
extensions = [
  "py"
]
aptRepos = [
  "ppa:deadsnakes/ppa"
]
packages = [
  "python3.12",
  "python3.12-dev",
  "python3.12-tk",
  "python3.12-venv",
  "libtk8.6",
  "libevent-dev",
  "gcc",
  "tk-dev",
  "qtbase5-dev",
  "qtchooser",
  "qt5-qmake",
  "qtbase5-dev-tools",
  "graphviz-dev",
  "graphviz"
]

popularity = 5.0
setup = [
  "wget https://storage.googleapis.com/container-bins/stderred_1.0_amd64.deb && dpkg -i stderred_1.0_amd64.deb && rm stderred_1.0_amd64.deb",
  "python3.12 -m ensurepip --upgrade",
  "python3.12 -m venv /opt/code-exec-env",
  "cd /opt/code-exec-env",
  "cp /opt/lang-helpers/python/requirements.txt requirements.txt",
  "while read requirement; do bin/pip install \"$requirement\" || echo \"Failed to install: $requirement\"; done < requirements.txt",
  "cp /opt/lang-helpers/python/gui_hook.py /opt/code-exec-env/gui_hook.py"
]

install_command = "/opt/code-exec-env/bin/pip install"

[run]
command = [
  "bash",
  "-c",
  "cd /opt/code-exec-env/ && cp -a ./data/** . 2>/dev/null || : && bin/python -B gui_hook.py"
]

[tests]

[tests.0]
code = "print(__name__)"
output = "__main__\n"

[tests.hello]
code = "print(\"hello\")"
output = "hello\n"

[languageServer]
command = [
  "pyls",
  "-v"
]
